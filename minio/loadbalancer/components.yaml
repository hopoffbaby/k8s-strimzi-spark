apiVersion: v1
kind: Namespace
metadata:
  name: router

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-config
  namespace: router
data:
  haproxy.cfg: |
    global
        log stdout format raw local0
        maxconn 4096

    defaults
        log global
        mode http
        option httplog
        option dontlognull
        timeout connect 5000ms
        timeout client  50000ms
        timeout server  50000ms

    resolvers kube-dns
        nameserver dns1 kube-dns.kube-system.svc.cluster.local:53
        hold valid 10s
        accepted_payload_size 8192

    frontend https_front
        bind *:443 ssl crt /etc/ssl/certs/your_cert.pem
        mode http
        acl tenant_a_up nbsrv(tenant_a_pods) gt 0
        acl tenant_b_up nbsrv(tenant_b_pods) gt 0
        use_backend tenant_a_pods if tenant_a_up
        use_backend tenant_b_pods if tenant_b_up

    backend tenant_a_pods
        mode http
        option httpchk GET /minio/health/cluster
        http-check expect status 200
        server minio-a-1 minio.minio-tenant-source.svc.cluster.local:9000 check ssl verify none resolvers kube-dns init-addr none

    backend tenant_b_pods
        mode http
        option httpchk GET /minio/health/cluster
        http-check expect status 200
        server minio-b-1 minio.minio-tenant-source.svc.cluster.local:9000 check ssl verify none resolvers kube-dns init-addr none

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy
  namespace: router
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haproxy
  template:
    metadata:
      labels:
        app: haproxy
    spec:
      containers:
      - name: haproxy
        image: haproxy:latest
        volumeMounts:
        - name: haproxy-config
          mountPath: /usr/local/etc/haproxy/haproxy.cfg
          subPath: haproxy.cfg
      volumes:
      - name: haproxy-config
        configMap:
          name: haproxy-config

---

apiVersion: v1
kind: Service
metadata:
  name: haproxy
  namespace: router
spec:
  selector:
    app: haproxy
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer